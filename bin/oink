#!/usr/bin/env ruby

require 'optparse'

require File.expand_path(File.dirname(__FILE__) + "/../lib/oink")
require File.expand_path(File.dirname(__FILE__) + "/../lib/oink/cli")

options = { :format => :short_summary, :mem_threshold => 75 }

opts = OptionParser.new do |opts|
  opts.banner = "Usage: oink [options] files"

  opts.on("-t", "--mem-threshold [INTEGER]", Integer,
          "Memory threshold in MB") do |mem_threshold|
    options[:mem_threshold] = mem_threshold
  end

  opts.on("-f", "--file filepath", "Output to file") do |filename|
    options[:output_file] = filename
  end

  format_list = (Oink::FORMAT_ALIASES.keys + Oink::FORMATS).join(',')
  opts.on("--format FORMAT", Oink::FORMATS, Oink::FORMAT_ALIASES, "Select format",
          "  (#{format_list})") do |format|
    options[:format] = format.to_sym
  end

end

opts.parse!

if ARGV.empty?
  puts opts
  exit
end

options[:mem_threshold] *= 1024
output = nil

if options[:output_file]
  output = File.open(options[:output_file], 'w')
else
  output = STDOUT
end

files = get_file_listing(ARGV)

handles = files.map { |f| File.open(f) }

Oink.new(handles, :mem_threshold => options[:mem_threshold], :format => options[:format]).each_line do |line|
  output.puts line
end

output.close
handles.each { |h| h.close }