#!/usr/bin/env ruby

require 'optparse'

require File.expand_path(File.dirname(__FILE__) + "/../lib/oink_for_memory")
require File.expand_path(File.dirname(__FILE__) + "/../lib/oink_for_active_record")
require File.expand_path(File.dirname(__FILE__) + "/../lib/oink/cli")

options = { :format => :short_summary, :type => :memory }

opts = OptionParser.new do |opts|
  opts.banner = "Usage: oink [options] files"

  opts.on("-t", "--threshold [INTEGER]", Integer,
          "Memory threshold in MB") do |threshold|
    options[:threshold] = threshold
  end

  opts.on("-f", "--file filepath", "Output to file") do |filename|
    options[:output_file] = filename
  end

  format_list = (OinkForMemory::FORMAT_ALIASES.keys + OinkForMemory::FORMATS).join(',')
  opts.on("--format FORMAT", OinkForMemory::FORMATS, OinkForMemory::FORMAT_ALIASES, "Select format",
          "  (#{format_list})") do |format|
    options[:format] = format.to_sym
  end

  opts.on("-m", "--memory", "Check for Memory Threshold (default)") do |v|
     options[:type] = :memory
  end

  opts.on("-r", "--active-record", "Check for Active Record Threshold") do |v|
     options[:type] = :active_record
  end

end

opts.parse!

if ARGV.empty?
  puts opts
  exit
end

output = nil

if options[:output_file]
  output = File.open(options[:output_file], 'w')
else
  output = STDOUT
end

files = get_file_listing(ARGV)

handles = files.map { |f| File.open(f) }

if options[:type] == :memory

  options[:threshold] ||= 75
  options[:threshold] *= 1024

  OinkForMemory.new(handles, options[:threshold], :format => options[:format]).each_line do |line|
    output.puts line
  end

elsif options[:type] == :active_record
  
  options[:threshold] ||= 500
  
  OinkForActiveRecord.new(handles, options[:threshold], :format => options[:format]).each_line do |line|
    output.puts line
  end
    
end

output.close
handles.each { |h| h.close }